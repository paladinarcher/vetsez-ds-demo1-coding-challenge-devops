###############################################################################
#
# Configuration file for stable/jenkins Helm chart
# See https://github.com/helm/charts/tree/master/stable/jenkins
#
# Install Jenkins with Helm by running:
# `helm install -n jenkins stable/jenkins -f values.yaml --version 1.3.0`
#
# This has been tested against version 1.3.0 of the Jenkins Helm chart
#
###############################################################################
serviceAccount:
  create: false
  name: jenkins
master:
    #image:
    #imageTag: 
    adminPassword: jenkins
    # Use NodePort for Minikube
    #serviceType: NodePort
    serviceType: LoadBalancer
    servicePort: 80
    containerEnv:
      - name: GITHUB_SECRET
        valueFrom:
          secretKeyRef:
            name: jenkins-github-oauth
            key: clientSecret
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: jenkins-github-oauth
            key: clientId
    installPlugins:
      - configuration-as-code:1.35
      - kubernetes:1.23.1
      - workflow-job:2.36
      - workflow-aggregator:2.6
      - credentials-binding:1.20
      - git:4.1.1
      - github:1.29.5
      - github-api:1.95
      - github-branch-source:2.5.8
      - slack:2.35
      - blueocean:1.21.0
      - pipeline-maven:3.8.2
      - pipeline-utility-steps:2.4.0
      - kubernetes-credentials-provider:0.13
      - github-oauth:0.33
      - multibranch-job-tear-down:1.2
      - pipeline-github:2.5
      - sonar:2.11
      - ws-cleanup:0.37
    overwritePlugins: true
    javaOpts: "-Dhudson.model.DirectoryBrowserSupport.CSP= "
    JCasC:
        enabled: true
        configScripts:
            mavenSlave: |
                jenkins:
                    clouds:
                      - kubernetes:
                            name: kubernetes
                            serverUrl: "https://kubernetes.default:443"
                            namespace: "default"
                            jenkinsUrl: "http://jenkins"
                            jenkinsTunnel: "jenkins-agent:50000"
                            templates:
                              - name: "default"
                                label: "jenkins-jenkins-slave"
                                nodeUsageMode: EXCLUSIVE
                                idleMinutes: 30
                                containers:
                                  - name: jnlp
                                    image: "jenkins/jnlp-slave:3.27-1"
                                    alwaysPullImage: false
                                    command: ""
                                    args: "^${computer.jnlpmac} ^${computer.name}"
                                    workingDir: "/home/jenkins"
                                    envVars:
                                      - envVar:
                                            key: "JENKINS_URL"
                                            value: "http://jenkins.default.svc.cluster.local"
                              - name: "maven"
                                label: "maven"
                                nodeUsageMode: EXCLUSIVE
                                inheritFrom: "default"
                                containers:
                                  - name: jnlp
                                    image: "paladinarcher/jenkins-slave-maven"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                              - name: "ruby"
                                label: "ruby"
                                nodeUsageMode: EXCLUSIVE
                                inheritFrom: "default"
                                containers:
                                  - name: jnlp
                                    image: "paladinarcher/jenkins-slave-ruby"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    envVars:
                                      - secretEnvVar:
                                          key: "RAILS_MASTER_KEY"
                                          secretName: "coding-challenge-app"
                                          secretKey: "secret_key_base"
                                  - name: postgres
                                    image: "library/postgres"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    envVars:
                                      - envVar:
                                          key: "POSTGRES_PASSWORD"
                                          value: "dsbpa"
                                      - envVar:
                                          key: "POSTGRES_USER"
                                          value: "dsbpa"
                                      - envVar:
                                          key: "POSTGRES_DB"
                                          value: "ci"
                              - name: "selenium"
                                label: "selenium"
                                nodeUsageMode: EXCLUSIVE
                                inheritFrom: "default"
                                containers:
                                  - name: jnlp
                                    image: "paladinarcher/jenkins-slave-ruby"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    envVars:
                                      - secretEnvVar:
                                          key: "RAILS_MASTER_KEY"
                                          secretName: "coding-challenge-app"
                                          secretKey: "secret_key_base"
                                  - name: selenium
                                    image: "selenium/standalone-chrome"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                              - name: "helm"
                                label: "helm"
                                nodeUsageMode: EXCLUSIVE
                                inheritFrom: "default"
                                containers:
                                  - name: jnlp
                                    image: "paladinarcher/jenkins-slave-helm"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    envVars:
                                      - envVar:
                                          key: "TILLER_NAMESPACE"
                                          value: "kube-system"
                                serviceAccount: jenkins-helm
                              - name: "docker"
                                label: "docker"
                                nodeUsageMode: EXCLUSIVE
                                inheritFrom: "default"
                                containers:
                                  - name: jnlp
                                    image: "paladinarcher/jenkins-slave-docker"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    envVars:
                                      - envVar:
                                          key: "DOCKER_REGISTRY_URL"
                                          value: ""
                                      - envVar:
                                          key: "DOCKER_CREDENTIAL_ID"
                                          value: "docker-registry"
                                      - envVar:
                                          key: "DOCKER_HOST"
                                          value: "tcp://localhost:2375"
                                  - name: dind
                                    image: "docker:18.05-dind"
                                    alwaysPullImage: true
                                    workingDir: ""
                                    command: ""
                                    args: ""
                                    privileged: true
                                volumes:
                                  - emptyDirVolume:
                                      mountPath: /var/lib/docker
                                      memory: false

            authentication: |
                jenkins:
                  securityRealm:
                    github:
                      githubWebUri: "https://github.com"
                      githubApiUri: "https://api.github.com"
                      clientID: "${GITHUB_CLIENT_ID}"
                      clientSecret: "${GITHUB_SECRET}"
                      oauthScopes: "read:org,user:email"
                  authorizationStrategy:
                    github:
                      adminUserNames: "kginstructor,cshupp1,moroni-pickering,kwaiette"
                      organizationNames: "paladinarcher"
                      useRepositoryPermissions: true


            git: |
                unclassified:
                  gitscm:
                    globalConfigName: jayward
                    globalConfigEmail: jay@paladinarcher.com
